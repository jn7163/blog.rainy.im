<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yu's Tech Lab - Markdown</title><link href="http://blog.rainy.im/" rel="alternate"></link><link href="http://blog.rainy.im/feeds/markdown.atom.xml" rel="self"></link><id>http://blog.rainy.im/</id><updated>2016-01-19T07:25:57+08:00</updated><entry><title>程序员专用笔记 Quiver</title><link href="http://blog.rainy.im/2016/01/19/quiver-programmers-notebook/" rel="alternate"></link><published>2016-01-19T07:25:57+08:00</published><updated>2016-01-19T07:25:57+08:00</updated><author><name>Yusheng</name></author><id>tag:blog.rainy.im,2016-01-19:/2016/01/19/quiver-programmers-notebook/</id><summary type="html"></summary><content type="html">&lt;p&gt;很多人觉得记笔记是浪费时间，但从长远来看实际上是为了节省时间，尤其是对程序员来说，知识点庞杂而又零散，若不及时记录、整理，这次浪费掉的时间下次还会再浪费一次。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://itunes.apple.com/us/app/quiver-programmers-notebook/id866773894"&gt;&lt;img alt="Quiver" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-logo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;什么时候需要记笔记？&lt;/h2&gt;
&lt;p&gt;很多人觉得记笔记是浪费时间，但从长远来看实际上是为了节省时间，尤其是对程序员来说，知识点庞杂而又零散，若不及时记录、整理，这次浪费掉的时间下次还会再浪费一次。一般来说笔记有两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;零散知识点&lt;/li&gt;
&lt;li&gt;阶段性总结&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;零散的知识点记录是为了方便之后查阅，因此需要笔记应用有更好的整理、管理以及搜索功能，比如 Evernote 这一类；而阶段性总结或者是 Blog 则更侧重于方便的格式化支持以及无干扰的写作环境，比如一般程序员最爱 &lt;code&gt;.md&lt;/code&gt; 或 &lt;code&gt;.rst&lt;/code&gt; 之类的简化标记格式。我尝试过很多方案，鲜有能够做到二者兼顾的，直到最近用上了&lt;a href="https://itunes.apple.com/us/app/quiver-programmers-notebook/id866773894"&gt;Quiver: The Programmer's Notebook&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;我需要哪些功能？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Markdown 支持&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;各种语言语法 &amp;amp; Highlight 支持&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LaTex 支持&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;方便整理：全文搜索、标签管理&lt;/li&gt;
&lt;li&gt;数据导出、导入、&lt;strong&gt;备份&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;实时预览、导出到 HTML/PDF 等&lt;/li&gt;
&lt;li&gt;多种主题、自定义样式&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Vim Key-binding&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;加粗&lt;/strong&gt;是必备功能，其它是基本功能，_斜体_是提升效率的 &lt;code&gt;Killer feature&lt;/code&gt; 但基本不会奢望。下面列举一些我用过包括还在用的笔记，基本涵盖了大部分常见类型笔记应用，它们在功能上各有侧重也互有重叠，下面我就逐个分析总结一下使用体验以及为什么我还是不满足还要选择一款新的应用（记住它的名字，&lt;strong&gt;Quiver: 颤抖&lt;/strong&gt;）。&lt;/p&gt;
&lt;h2&gt;我用过哪些？&lt;/h2&gt;
&lt;h3&gt;1. Evernote / 马克飞象 / Alternote&lt;/h3&gt;
&lt;p&gt;Evernote 自然是最早期的优秀先烈，我记得曾经专门写过一篇总结 Evernote 与 OneNote 的文章，最终推荐马克飞象+Evernote。但是我已经卸载 Evernote 很久了，原因无非是打开越来越慢，一堆无用的功能越来越扰人。后来推出一些看起来高大上但又华而不实的商务产品，我就知道像我这种只想好好记个笔记的用户已经不是他们的目标群体了。后来也用了一下 Alternote，有点像是简洁优化版的 Evernote，当然从名字到刻意将笔记同步至 Evernote，都让人感觉只是借助 Evernote 的名气而已，不过用起来倒确实是流畅很多。据我了解，我身边还在坚持使用 Evernote 的，要么是因为付费入坑太久，里面沉积的内容太多懒得倒腾，要么是对笔记功能需求不大只是为了方便保存个网页什么的，真正还在认认真真用 Evernote 及其周边产品的，少之又少，也算是跟它的衰败互为因果吧。&lt;/p&gt;
&lt;h3&gt;2. OneNote&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;M$&lt;/code&gt; 出品，值得信赖。从最初在 Windows 上用，后来换到 Mac 依然在用，到现在还是使用频率最高的。没有别的原因，OneNote 就是在电脑上用起来最像真实“纸质笔记本”的笔记应用，没有之一。当然是不考虑 Markdown 的前提下，毕竟你在本子上涂鸦笔记不会考虑格式化问题。OneNote 也有剪切网页的 Chrome 插件，但是 &lt;code&gt;M$&lt;/code&gt; 的同步速度确实是令人忧伤。另外上面说到之前的文章最终没有推荐 OneNote 是因为太太太占内存了，当时我觉得靠 &lt;code&gt;M$&lt;/code&gt; 改善的速度还比不上我换新电脑的速度，果然换了新电脑之后，感觉好多了&lt;code&gt;:D&lt;/code&gt;。&lt;/p&gt;
&lt;h3&gt;3. Leanote / Wiz / Ulysses&lt;/h3&gt;
&lt;p&gt;为了 Markdown ，尝试了一些。我记得 Leanote 好像是国内独立开发者开发出来的一全套，网页端+客户端+Blog 托管，很厉害！遗憾的是无论在网页端还是客户端，响应速度上并不尽如人意。为知笔记，视网膜屏上的界面全是像素锯齿，怎么下得去手？网页版几乎是所有应用的通病（包括 Evernote 和马克飞象），卡顿和离线处理，这是浏览器的先天缺陷怪不得他们，但是使用体验确实差。最后试用了一段时间备受推崇的独立离线编辑器 Ulysses，似乎是很多作家的最爱，因为可以非常方便地导出漂亮的 PDF 及其他格式，但我实在是用不习惯它的 Markdown 编辑功能，尤其是对代码块的支持简直反人类，另外它的导入导出库的功能也是一怪，如果还没出手买入的建议不要买了，283 的价格完全比不上 68的（前段时间优惠只要12块！） &lt;strong&gt;Quiver：再次颤抖吧&lt;/strong&gt;。&lt;/p&gt;
&lt;h3&gt;4. Typora / Vim / Atom&lt;/h3&gt;
&lt;p&gt;前面列举的一些比较适合多笔记整理和管理的，单独的 Markdown 编辑器，现在还在用的Typora 就非常清新感人，对 Markdown 的立即渲染以及指定语言的代码块支持和&lt;code&gt;LaTex&lt;/code&gt;的可视化编辑，一款免费应用可以做到这样已经非常了不起了。只不过现在还不是特别稳定，有一些小 BUG，作者更新也很及时。Typora 出毛病的时候只能用 Vim 或者 Atom，Markdown 用久了实时预览的功能其实很少会用，单纯为了码字用最重要的还是手不离键盘，这也是 Markdown 如此受程序员欢迎的原因之一。&lt;/p&gt;
&lt;h3&gt;5. Jupyter&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://blog.rainy.im/2016/01/02/lua-and-torch7-on-jupyter/"&gt;上一篇：Jupyter上的Lua与torch7&lt;/a&gt; 对 Jupyter 的介绍已经很清楚了，它本身对 Markdown 的支持就很好，加上不同语言的 Kernel 可以直接内嵌代码执行结果，用于演示和可视化最方便不过。只不过要自己搭建稍微麻烦一些，另外导出到其它格式也是很麻烦的一件事。可喜的是 Quiver 继承了 Jupyter 里面 Cell 的概念（我猜是 Jupyter 在先吧，未考证），所以开始用 Quiver 的时候不但不会觉得别扭，反而非常熟悉亲切。&lt;/p&gt;
&lt;h2&gt;Quiver!Quiver!Quiver!&lt;/h2&gt;
&lt;h3&gt;1. Text, Markdown, Code, LaTex, Diagram - Cell&lt;/h3&gt;
&lt;p&gt;Quiver 里面的 Cell 共有这5类可选，当然你也可以全篇用一整个 Markdown Cell：&lt;/p&gt;
&lt;p&gt;&lt;img alt="cell" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-cells.png"&gt;&lt;/p&gt;
&lt;p&gt;区分不同的 Cell 可以让笔记更加条理清晰，而且可以设定语言，几乎涵盖了所有编程语言：&lt;/p&gt;
&lt;p&gt;&lt;img alt="code" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-code.png"&gt;&lt;/p&gt;
&lt;h3&gt;2. 备份&lt;/h3&gt;
&lt;p&gt;Quiver 的全部内容保存在由 JSON 文件构成的 &lt;code&gt;*.qvlibrary&lt;/code&gt; 中，可以无痛打包、切换、备份：&lt;/p&gt;
&lt;p&gt;&lt;img alt="library" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-library.png"&gt;&lt;/p&gt;
&lt;p&gt;设置 Library 位置到自己的网盘，可以随时备份：&lt;/p&gt;
&lt;p&gt;&lt;img alt="cloud" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-cloud.png"&gt;&lt;/p&gt;
&lt;h3&gt;3. 标签管理与全文搜索&lt;/h3&gt;
&lt;p&gt;&lt;img alt="search" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-search.png"&gt;&lt;/p&gt;
&lt;h3&gt;4. 预览 &amp;amp; 导出 &amp;amp; 3栏式布局&lt;/h3&gt;
&lt;p&gt;包括纯编辑、实时预览与结果预览3种模式，与 Ulysses 同样的3栏式布局，支持导出到 &lt;code&gt;MD/TXT/HTML/PDF/JSON&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img alt="preview" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-preview.png"&gt;&lt;/p&gt;
&lt;h3&gt;5. 主题 &amp;amp; 样式&lt;/h3&gt;
&lt;p&gt;软件界面的配色主题可以自行编辑（或去 GitHub 下载）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="theme" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-theme.png"&gt;&lt;/p&gt;
&lt;p&gt;编辑器内以及预览的样式可以用&lt;code&gt;CSS&lt;/code&gt;编辑：&lt;/p&gt;
&lt;p&gt;&lt;img alt="style" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-style.png"&gt;&lt;/p&gt;
&lt;h3&gt;6. Killer-feature: Vim Key binding&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;前方高能预警！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="vim" src="http://7xiijd.com1.z0.glb.clouddn.com/Quiver-vim.png"&gt;&lt;/p&gt;
&lt;p&gt;所有的 Cell 都可以设定 Vim 键盘映射（为了避免圣战，甚至还支持 Emacs 映射）！单独这一条，各位不停跳票不停吵闹&lt;code&gt;最好用&lt;/code&gt;的可以撤离战场了：&lt;/p&gt;
&lt;p&gt;&lt;img alt="SUTMM" src="http://7xiijd.com1.z0.glb.clouddn.com/Shut-Up-And-Take-My-Money.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;7. Bug Report&lt;/h3&gt;
&lt;p&gt;当然 Quiver 也不是完美无缺的，我在使用过程中遇到以下一些问题，希望后续更新可以改善：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vim 输入模式下面新建 Cell ，无法立即输入，需要切换一下 VIEW 模式；&lt;/li&gt;
&lt;li&gt;Vim 的 VIEW 模式光标只覆盖半个中文，这个是通病；&lt;/li&gt;
&lt;li&gt;没有打字机模式，也就是当前输入行无法聚焦在屏幕中央位置，Vim 下对应的 &lt;code&gt;zz&lt;/code&gt; 指令也无效，当然可以通过输入一堆回车键顶上去，但终究不是很方便；&lt;/li&gt;
&lt;li&gt;还有一个最大的 BUG 我没弄清楚原因，可能是网盘同步的时候我正在编辑文档，导致一部分正在输入的内容无法存档，也无法 Copy 出来，可能导致内容丢失，所以在编辑的时候最好暂停网盘同步。&lt;/li&gt;
&lt;/ol&gt;</content><category term="Markdown"></category><category term="总结"></category></entry></feed>